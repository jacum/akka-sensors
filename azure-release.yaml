trigger:
  batch: true
  branches:
    include:
    - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: AkkaSensors

steps:
  - task: DownloadSecureFile@1
    name: secring
    inputs:
      secureFile: secring.asc

  - task: Bash@3
    displayName: 'Build, sign and publish'
    inputs:
      targetType: 'inline'
      script: |
        echo $(tty)
        ls -la $(secring.secureFilePath)
        mkdir ~/.gnupg
        chmod -R 700 ~/.gnupg
        echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf

        gpg --batch --import $(secring.secureFilePath)
        gpg --version
        gpg --list-keys
        gpg --list-secret-keys

        git checkout master
        git config --global user.email "tim@@pragmasoft.nl"
        git config --global user.name "Azure Devops release pipeline"

        sbt -Divy.home=${IVY_HOME} -Dsbt.ivy.home=${IVY_HOME} "++2.12.12; test"
        sbt -Divy.home=${IVY_HOME} -Dsbt.ivy.home=${IVY_HOME} "++2.13.4; test"
        sbt -Divy.home=${IVY_HOME} -Dsbt.ivy.home=${IVY_HOME} "release with-defaults"

        rm -rf $(secring.secureFilePath)
        rm -rf ~/.gnupg

    env:
      RELEASE: true
      # passphrase will be passed to sbt plugin from here
      PGP_PASSPHRASE: $(gpg_pass)
      USERNAME: $(sonatype_user)
      PASSWORD: $(sonatype_password)
      # neeeded for gpg to work on headless azure agents
      GPG_TTY: /dev/pts/0

#  - task: GitHubRelease@0
#    inputs:
#      gitHubConnection: jacum
#      repositoryName: '$(Build.Repository.Name)'
#      action: 'create' # Options: create, edit, delete
#      #target: '$(Build.SourceVersion)' # Required when action == Create || Action == Edit
#      #tagSource: 'auto' # Required when action == Create# Options: auto, manual
#      #tagPattern: # Optional
#      #tag: # Required when action == Edit || Action == Delete || TagSource == Manual
#      #title: # Optional
#      #releaseNotesSource: 'file' # Optional. Options: file, input
#      #releaseNotesFile: # Optional
#      #releaseNotes: # Optional
#      #assets: '$(Build.ArtifactStagingDirectory)/*' # Optional
#      #assetUploadMode: 'delete' # Optional. Options: delete, replace
#      #isDraft: false # Optional
#      #isPreRelease: false # Optional
#      #addChangeLog: true # Optional
#      #compareWith: 'lastFullRelease' # Required when addChangeLog == True. Options: lastFullRelease, lastRelease, lastReleaseByTag
#      #releaseTag: # Required when compareWith == LastReleaseByTag